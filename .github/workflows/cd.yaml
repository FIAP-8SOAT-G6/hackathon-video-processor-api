name: Continuous Delivery

on:
  push:
    branches:
      - main

env:
  AWS_REGION_DEFAULT: us-east-1
  AWS_ECR_REPOSITORY: video-processor-hackathon/api
  AWS_LAMBDA_FUNCTION_NAME: GetPresignedUrl
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION_DEFAULT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform ECR
        working-directory: infrastructure/ecr
        run: |
          terraform init
          terraform apply -auto-approve
      
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.AWS_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
          docker build -t "$IMAGE_URI" .
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Push image to ECR
        run: |
          docker push "$IMAGE_URI"

      - name: Terraform Init and Apply for Lambda + API Gateway
        working-directory: infrastructure/lambda
        env:
          TF_VAR_image_tag: ${{ env.IMAGE_TAG }}
        run: |
          terraform init
          terraform apply -auto-approve